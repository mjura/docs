"use strict";(self.webpackChunkgo_4_clouds=self.webpackChunkgo_4_clouds||[]).push([[18],{3905:(e,n,l)=>{l.d(n,{Zo:()=>c,kt:()=>m});var t=l(7294);function r(e,n,l){return n in e?Object.defineProperty(e,n,{value:l,enumerable:!0,configurable:!0,writable:!0}):e[n]=l,e}function a(e,n){var l=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),l.push.apply(l,t)}return l}function o(e){for(var n=1;n<arguments.length;n++){var l=null!=arguments[n]?arguments[n]:{};n%2?a(Object(l),!0).forEach((function(n){r(e,n,l[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(l)):a(Object(l)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(l,n))}))}return e}function s(e,n){if(null==e)return{};var l,t,r=function(e,n){if(null==e)return{};var l,t,r={},a=Object.keys(e);for(t=0;t<a.length;t++)l=a[t],n.indexOf(l)>=0||(r[l]=e[l]);return r}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(t=0;t<a.length;t++)l=a[t],n.indexOf(l)>=0||Object.prototype.propertyIsEnumerable.call(e,l)&&(r[l]=e[l])}return r}var p=t.createContext({}),i=function(e){var n=t.useContext(p),l=n;return e&&(l="function"==typeof e?e(n):o(o({},n),e)),l},c=function(e){var n=i(e.components);return t.createElement(p.Provider,{value:n},e.children)},u="mdxType",g={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},d=t.forwardRef((function(e,n){var l=e.components,r=e.mdxType,a=e.originalType,p=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=i(l),d=r,m=u["".concat(p,".").concat(d)]||u[d]||g[d]||a;return l?t.createElement(m,o(o({ref:n},c),{},{components:l})):t.createElement(m,o({ref:n},c))}));function m(e,n){var l=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=l.length,o=new Array(a);o[0]=d;var s={};for(var p in n)hasOwnProperty.call(n,p)&&(s[p]=n[p]);s.originalType=e,s[u]="string"==typeof e?e:r,o[1]=s;for(var i=2;i<a;i++)o[i]=l[i];return t.createElement.apply(null,o)}return t.createElement.apply(null,l)}d.displayName="MDXCreateElement"},8858:(e,n,l)=>{l.r(n),l.d(n,{assets:()=>p,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>i});var t=l(7462),r=(l(7294),l(3905));const a={sidebar_position:11},o="Use an Ingress Controller",s={unversionedId:"kubernetes/ingress-controller",id:"kubernetes/ingress-controller",title:"Use an Ingress Controller",description:"Deploy the NGINX Ingress Controller",source:"@site/docs/kubernetes/ingress-controller.md",sourceDirName:"kubernetes",slug:"/kubernetes/ingress-controller",permalink:"/docs/kubernetes/ingress-controller",draft:!1,tags:[],version:"current",sidebarPosition:11,frontMatter:{sidebar_position:11},sidebar:"tutorialSidebar",previous:{title:"Using Service concept",permalink:"/docs/kubernetes/service-concept"},next:{title:"Install Load Balancer",permalink:"/docs/kubernetes/loadbalancer-installation"}},p={},i=[{value:"Deploy the NGINX Ingress Controller",id:"deploy-the-nginx-ingress-controller",level:2},{value:"Deploy a hello-world app",id:"deploy-a-hello-world-app",level:2}],c={toc:i};function u(e){let{components:n,...l}=e;return(0,r.kt)("wrapper",(0,t.Z)({},c,l,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"use-an-ingress-controller"},"Use an Ingress Controller"),(0,r.kt)("h2",{id:"deploy-the-nginx-ingress-controller"},"Deploy the NGINX Ingress Controller"),(0,r.kt)("p",null,"Note: ",(0,r.kt)("a",{parentName:"p",href:"https://kubernetes.github.io/ingress-nginx/deploy"},"NGINX Ingress Controller")),(0,r.kt)("p",null,"Add a Helm chart repository with the Ingress NGINX"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx\nhelm repo update\n")),(0,r.kt)("p",null,"Install the NGINX Ingress Controller:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"helm install --create-namespace --namespace ingress-nginx ingress-nginx ingress-nginx/ingress-nginx\n")),(0,r.kt)("p",null,"Update the NGINX Ingress Controller with ",(0,r.kt)("inlineCode",{parentName:"p"},"hostNetwork")," true:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"helm upgrade -n ingress-nginx ingress-nginx ingress-nginx/ingress-nginx --set controller.hostNetwork=true\n")),(0,r.kt)("p",null,"Verify the Ingress NGINX installation:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl get pods -n ingress-nginx -l app.kubernetes.io/name=ingress-nginx\nhelm list -n ingress-nginx\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Check the installed version")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"POD_NAME=$(kubectl get pods -n ingress-nginx -l app.kubernetes.io/name=ingress-nginx -o jsonpath='{.items[0].metadata.name}')\nkubectl exec -n ingress-nginx -it $POD_NAME -- /nginx-ingress-controller --version\n")),(0,r.kt)("p",null,"Output should be similar to:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"-------------------------------------------------------------------------------\nNGINX Ingress controller\n  Release:       v1.5.1\n  Build:         d003aae913cc25f375deb74f898c7f3c65c06f05\n  Repository:    https://github.com/kubernetes/ingress-nginx\n  nginx version: nginx/1.21.6\n\n-------------------------------------------------------------------------------\n")),(0,r.kt)("h2",{id:"deploy-a-hello-world-app"},"Deploy a hello-world app"),(0,r.kt)("p",null,"Create a new Namespace:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl create namespace webapp\n")),(0,r.kt)("p",null,"Create a Deployment using the following command:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl create deployment -n webapp hello-world --image=gcr.io/google-samples/hello-app:1.0 --replicas=3\n")),(0,r.kt)("p",null,"Expose the Deployment:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl expose deployment -n webapp hello-world --type=ClusterIP --port=8080\n")),(0,r.kt)("p",null,"Verify if the Service is created and is available on a node port:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl get service -n webapp hello-world\n")),(0,r.kt)("p",null,"Output:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"NAME      TYPE       CLUSTER-IP       EXTERNAL-IP   PORT(S)          AGE\nweb       ClusterIP  10.104.133.249   <none>        8080/TCP         12m\n")),(0,r.kt)("p",null,"Create an Ingress resource:"),(0,r.kt)("p",null,"The following file is an Ingress resource that sends traffic to your Service via hello-world.nc."),(0,r.kt)("p",null,"Create the hello-ingress.yaml from the following file:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="hello-ingress.yaml"',title:'"hello-ingress.yaml"'},'apiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: hello-ingress\n  namespace: webapp\n  annotations:\n    kubernetes.io/ingress.class: "nginx"\n    nginx.ingress.kubernetes.io/rewrite-target: /$1\nspec:\n  rules:\n    - host: hello-world.nc\n      http:\n        paths:\n          - path: /\n            pathType: Prefix\n            backend:\n              service:\n                name: hello-world\n                port:\n                  number: 8080\n')),(0,r.kt)("p",null,"Create the Ingress resource by running the following command:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl apply -f hello-ingress.yaml\n")),(0,r.kt)("p",null,"Verify if the IP address is set:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl get ingress -n webapp\n")),(0,r.kt)("p",null,"Note: This can take a couple of minutes."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"NAME              CLASS    HOSTS              ADDRESS        PORTS   AGE\nhello-ingress     <none>   hello-world.nc     IP_ADDRESS     80      38s\n")),(0,r.kt)("p",null,"Add the following line to the bottom of the /etc/hosts file."),(0,r.kt)("p",null,"Note: The IP address displayed within the ingress list will be the internal IP."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"IP_ADDRESS hello-world.nc\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"sudo bash -c 'echo \"IP_ADDRESS hello-world.nc\" >> /etc/hosts'\n")),(0,r.kt)("p",null,"Verify if the Ingress controller is directing traffic:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"curl http://hello-world.nc\n")),(0,r.kt)("p",null,"or "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"curl --header 'Host: hello-world.nc' http://IP_ADDRESS\n")),(0,r.kt)("p",null,"Output:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"Hello, world!\nVersion: 1.0.0\nHostname: hello-world-55b8c6998d-8k564\n")),(0,r.kt)("p",null,"Create a second Deployment using the following command:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl create deployment -n webapp hello-world2 --image=gcr.io/google-samples/hello-app:2.0\n")),(0,r.kt)("p",null,"Expose the Deployment:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl expose deployment -n webapp hello-world2 --port=8080 --type=ClusterIP\n")),(0,r.kt)("p",null,"Edit the existing hello-ingress.yaml and add the following lines:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"      - path: /v2\n        pathType: Prefix\n        backend:\n          service:\n            name: web2\n            port:\n              number: 8080\n")),(0,r.kt)("p",null,"Apply the changes:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl apply -f hello-ingress.yaml\n")),(0,r.kt)("p",null,"Test Your Ingress by accessing the 1st version of the Hello World app."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"curl http://hello-world.nc\n")),(0,r.kt)("p",null,"Output:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"Hello, world!\nVersion: 1.0.0\nHostname: hello-world-55b8c6998d-8k564\n")),(0,r.kt)("p",null,"Access the 2nd version of the Hello World app."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"curl http://hello-world.info/v2\n")),(0,r.kt)("p",null,"Output:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"Hello, world!\nVersion: 2.0.0\nHostname: hello-world2-75cd47646f-t8cjk\n")))}u.isMDXComponent=!0}}]);