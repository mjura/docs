"use strict";(self.webpackChunkgo_4_clouds=self.webpackChunkgo_4_clouds||[]).push([[9605],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>b});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),i=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=i(e.components);return r.createElement(c.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=i(n),d=a,b=p["".concat(c,".").concat(d)]||p[d]||m[d]||l;return n?r.createElement(b,o(o({ref:t},u),{},{components:n})):r.createElement(b,o({ref:t},u))}));function b(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,o=new Array(l);o[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[p]="string"==typeof e?e:a,o[1]=s;for(var i=2;i<l;i++)o[i]=n[i];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},6292:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>p,frontMatter:()=>l,metadata:()=>s,toc:()=>i});var r=n(7462),a=(n(7294),n(3905));const l={sidebar_position:2},o="Introduction to Kubernetes",s={unversionedId:"kubernetes/intro-to-kubernetes",id:"kubernetes/intro-to-kubernetes",title:"Introduction to Kubernetes",description:"Basic Kubernetes client commands to check first",source:"@site/docs/kubernetes/intro-to-kubernetes.md",sourceDirName:"kubernetes",slug:"/kubernetes/intro-to-kubernetes",permalink:"/docs/kubernetes/intro-to-kubernetes",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Install kubectl",permalink:"/docs/kubernetes/install-kubectl"},next:{title:"Basic cluster operations",permalink:"/docs/kubernetes/cluster-operations"}},c={},i=[{value:"<code>kubectl</code> basic commands",id:"kubectl-basic-commands",level:2},{value:"Learn how to use labels",id:"learn-how-to-use-labels",level:2},{value:"Learn how to generate example <code>yaml</code> manifests",id:"learn-how-to-generate-example-yaml-manifests",level:2},{value:"Start first pod containers",id:"start-first-pod-containers",level:2}],u={toc:i};function p(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"introduction-to-kubernetes"},"Introduction to Kubernetes"),(0,a.kt)("p",null,"Basic ",(0,a.kt)("strong",{parentName:"p"},"Kubernetes")," client commands to check first"),(0,a.kt)("h2",{id:"kubectl-basic-commands"},(0,a.kt)("inlineCode",{parentName:"h2"},"kubectl")," basic commands"),(0,a.kt)("p",null,"Run ",(0,a.kt)("inlineCode",{parentName:"p"},"Kubernetes")," basic commands:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl cluster-info\nkubectl get nodes\nkubectl get nodes -o wide\nkubectl describe nodes\nkubectl get ns\nkubectl get pods --namespace kube-system\nkubectl get pods --namespace kube-system -o wide\nkubectl get pods --all-namespaces\nkubectl get pods -A -o wide\nkubectl describe pods\nkubectl get events\nkubectl get events --sort-by='.lastTimestamp' -A\nkubectl api-resources\nkubectl explain pod\nkubectl explain pod --recursive\n")),(0,a.kt)("p",null,"More commands and option you will find in official ",(0,a.kt)("inlineCode",{parentName:"p"},"kubectl")," ",(0,a.kt)("a",{parentName:"p",href:"https://kubernetes.io/docs/reference/kubectl/cheatsheet/"},"Cheat Sheet")),(0,a.kt)("h2",{id:"learn-how-to-use-labels"},"Learn how to use labels"),(0,a.kt)("p",null,"Check labes for nodes and add label role:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl get nodes --show-labels\nkubectl label node worker2 disk=ssd\n")),(0,a.kt)("p",null,"Remove label from node:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl label node worker2 disk-\n")),(0,a.kt)("h2",{id:"learn-how-to-generate-example-yaml-manifests"},"Learn how to generate example ",(0,a.kt)("inlineCode",{parentName:"h2"},"yaml")," manifests"),(0,a.kt)("p",null,"Generate pod ",(0,a.kt)("inlineCode",{parentName:"p"},"yaml")," template manifest:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl run test --image=nginx --dry-run -o yaml\n")),(0,a.kt)("p",null,"Generate deployment ",(0,a.kt)("inlineCode",{parentName:"p"},"yaml")," template manifest:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl create deployment nginx --image=nginx --dry-run -o yaml\n")),(0,a.kt)("p",null,"Generate service ",(0,a.kt)("inlineCode",{parentName:"p"},"yaml")," template service manifest:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl create service clusterip my-service --tcp=8080 --dry-run -o yaml\n")),(0,a.kt)("h2",{id:"start-first-pod-containers"},"Start first pod containers"),(0,a.kt)("p",null,"Start example ",(0,a.kt)("inlineCode",{parentName:"p"},"busybox")," pod container from command line:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl run busybox --image=busybox -- sleep 3600\n")),(0,a.kt)("p",null,"Start example ",(0,a.kt)("inlineCode",{parentName:"p"},"debian")," pod container command line:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl run test --image=debian -- sleep 3600\n")))}p.isMDXComponent=!0}}]);